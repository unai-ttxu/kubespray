---
- name: create temporary resolveconf cloud init file
  command: cp -f /etc/resolv.conf "{{ resolvconffile }}"
  when: ansible_os_family in ["Flatcar Container Linux by Kinvolk"]

- name: Configure interface configuration file to manage resolv.configuration
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
  loop:
    - regexp: '^DOMAIN=.*'
      line: 'DOMAIN="{{ domainentry }}"'
    - regexp: '^DNS1=.*'
      line: 'DNS1="127.0.0.1"'
    - regexp: '^PEERDNS=.*'
      line: 'PEERDNS="no"'
    - regexp: '^SEARCH=.*'
      line: 'SEARCH="{{ searchentries }}"'
  notify: Preinstall | propagate resolvconf to k8s components

- name: Configure interface configuration file to manage resolv.conf DNS
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}
    regexp: '^DNS{{ index }}=.*'
    line: 'DNS{{ index }}="{{ item }}"'
  loop: "{{ (nodelocaldns_ip|d([]) + coredns_server|d([]) + nameservers|d([]) + cloud_resolver|d([])) | unique }}"
  loop_control:
    index_var: index
  notify: Preinstall | propagate resolvconf to k8s components

- name: Configure interface configuration file to disable not needed parameters
  replace:
    path: /etc/sysconfig/network-scripts/ifcfg-{{ ansible_default_ipv4.interface }}
    regexp: '{{ item.regexp }}'
    replace: '{{ item.line }}'
  loop:
    - regexp: '^(IPV6.*)'
      line: '#\1'
    - regexp: '^(NM_CONTROLLED=.*)'
      line: '#\1'
  notify: Preinstall | propagate resolvconf to k8s components

- name: get temporary resolveconf cloud init file content
  command: cat {{ resolvconffile }}
  register: cloud_config
  when: ansible_os_family in ["Flatcar Container Linux by Kinvolk"]

- name: persist resolvconf cloud init file
  template:
    dest: "{{ resolveconf_cloud_init_conf }}"
    src: resolvconf.j2
    owner: root
    mode: 0644
  notify: Preinstall | update resolvconf for Flatcar Container Linux by Kinvolk
  when: ansible_os_family in ["Flatcar Container Linux by Kinvolk"]
